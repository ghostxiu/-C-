template<class T>
void Merges(T * c,T * d,int l ,int m ,int r )
{
    int i = l ;
    int j = m ;
    int k = l ;
    while(( i < m )&&( j < r ))
    {
        if(c[i]>c[j])
        {
            d[k++] = c[j++];
        }
        else
        {
            d[k++] = c[i++];
        }
    }
    if( i >= m)
    {
        for(;j < r ; j++)
        {
            d[k++] = c[j];
        }
    }
    else
    {
        for(;i < m;i++)
        {
            d[k++] = c[i];
        }
    }
 }

template <class T>
//合并排序模板1，递归方法
void MergeSort(T *a,int left ,int right)
{
    if(right - left > 1  )
    {
        //至少有两个元素
        int middle = (left+right)/2;

        //分治递归解决子问题
        MergeSort(a,left,middle);
        MergeSort(a,middle,right);


        T b[right-left];

        Merges(a,b,left,middle,right);
        Copy(a,b,left,right);

    }
}





template<class T>
//合并排序模板2的合并模板
void Merge(T *c,T *d,int l ,int m ,int r )
{
    int i = l ;
    int j = m + 1;
    int k = l ;
    while(( i <= m )&&( j <= r ))
    {
        if(c[i]>c[j])
        {
            d[k++] = c[j++];
        }
        else
        {
            d[k++] = c[i++];
        }
    }
    if( i > m)
    {
        for(;j <= r ; j++)
        {
            d[k++] = c[j];
        }
    }
    else
    {
        for(;i<=r;i++)
        {
            d[k++] = c[i];
        }
    }
}


template <class T>
void MergePass(T *x, T *y,int s ,int n)
{
    //合并为大小为s的子数组
    int i = 0 ;
    while( i <= n - 2 * s)
    {
        Merge(x,y,i,i+s-1,i+2*s-1);
        i = i + 2 * s;
    }
    //剩下的元素个数少于2s
    if(i+s < n)
    {
        Merge(x,y,i,i+s-1,n-1);
        i = i + 2 *s;
    }
    else{
        for(int j = i ; j <= n-1 ; j++)
        {
            y[j] = x[j];
        }
    }
}


template<class T>
//合并排序模板2，消除递归后的排序
void MergeSort(T *a , int n)
{
    T *b = new T[n];
    int s = 1 ;
    while(s < n)
    {
        MergePass(a,b,s,n);//合并到b
        s += s;
        MergePass(b,a,s,n);//合并到数组a
        s += s ;
    }
}
